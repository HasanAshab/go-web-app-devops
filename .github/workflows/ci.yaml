name: CI pipeline
on:
  push:
    branches:
      - main
    paths-ignore:
      - 'helm/**'
      - 'k8s/**'
      - 'README.md'
  
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'helm/**'
      - 'k8s/**'
      - 'README.md'

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-go@v5
        with:
          go-version: 1.22.5

      - name: Install dependencies
        run: go mod download

      - name: Run tests
        run: go test ./...

  lint:
    name: Run lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: golangci/golangci-lint-action@v7
        with:
          version: v2.1.6
          
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-go@v5
        with:
          go-version: 1.22.5
      
      - name: Install dependencies
        run: go mod download
      
      - name: Build project
        run: CGO_ENABLED=0 GOOS=linux go build -o main .
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: main

  docker:
    name: Build and push docker image
    runs-on: ubuntu-latest
    needs: build
  #  if: github.event_name == 'push'
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    outputs:
      image_tag: ${{ steps.set_output.outputs.image_tag }}
      image_tag_short: ${{ steps.set_output.outputs.image_tag_short }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,format=long
            type=ref,event=branch
            latest

    - name: Build docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./Dockerfile
        target: prod
        push: false
        load: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
    
    - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
    
    - name: Push docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./Dockerfile
        target: prod
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
    
    - name: Set image tag outputs
      id: set_output
      run: |
        echo "image_tag=${{ steps.meta.outputs.version }}" >> $GITHUB_OUTPUT
        echo "image_tag_short=$(echo ${{ steps.meta.outputs.version }} | cut -c5-11)" >> $GITHUB_OUTPUT
 
  update-helm:
    name: Sync helm chart image tag
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - uses: actions/checkout@v4

      - name: Update tag in Helm chart
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: 'helm/go-web-app-chart/values.yaml'
          propertyPath: 'image.tag'
          value: ${{ needs.docker.outputs.image_tag }}
          masterBranchName: main
          targetBranch: main
          commit: true
          message: 'ci: update Helm chart image tag to ${{ needs.docker.outputs.image_tag_short }}'
