name: CI
on:
  push:
    branches:
      - main
    paths-ignore:
      - 'helm/**'
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
  
      - name: Setup GO
        uses: actions/setup-go@v5
        with:
          go-version: 1.22
          
      - name: Installing dependencies 
        run: go mod download
       
      - name: Test
        run: go test ./...
 
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        
      - name: Run golang lint
        uses: golangci/golangci-lint-action@v7
        with:
          version: v2.1.6

  build:
    name: Build & Upload Artifacts
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup GO
        uses: actions/setup-go@v5
        with:
          go-version: 1.22

      - name: Installing dependencies 
        run: go mod download

      - name: Build App 
        run: go build -o main    

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: main 
          
  docker:
    name: Docker Build & Push
    runs-on: ubuntu-latest
    needs: [test, lint]
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
    
      - name: Lowercase image name
        run:  echo "lower_image_name=${IMAGE_NAME,,}" >> $GITHUB_ENV
      
      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
             
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          target: prod 
          push: true
          tags: ${{ env.REGISTRY }}/$lower_image_name:${{ github.run_id }}
  
  update-newtag-in-helm-chart:
    runs-on: ubuntu-latest
    needs: [docker]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
    
      - name: Update tag in Helm chart
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: 'helm/go-web-app-chart/values.yaml'
          propertyPath: 'file.image.tag'
          value: '${{github.run_id}}'
          commitChange: false

      - name: Commit & push changes
        run: |
          git config --global user.name "HossainAhnaf"
          git config --global user.email "itsbuldusmp@gmail.com"
          git add helm/go-web-app-chart/values.yaml
          git commit -m "Update tag in helm chart"
          git push